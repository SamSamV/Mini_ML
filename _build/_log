### Starting build.
# Target: mmlcat.ml.depends, tags: { bin_annot, explain, extension:ml, file:mmlcat.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/betacodd/.opam/4.14.0/bin/ocamldep.opt -modules mmlcat.ml > mmlcat.ml.depends # cached
# Target: mmllexer.mll, tags: { bin_annot, explain, extension:mll, file:mmllexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir }
/home/betacodd/.opam/4.14.0/bin/ocamllex.opt -q mmllexer.mll
# Target: mmllexer.ml.depends, tags: { bin_annot, explain, extension:ml, file:mmllexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
/home/betacodd/.opam/4.14.0/bin/ocamldep.opt -modules mmllexer.ml > mmllexer.ml.depends
# Target: mmlparser.mly.depends, tags: { bin_annot, explain, extension:mly, file:mmlparser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir }
menhir --raw-depend --ocamldep '/home/betacodd/.opam/4.14.0/bin/ocamldep.opt -modules' mmlparser.mly > mmlparser.mly.depends
+ menhir --raw-depend --ocamldep '/home/betacodd/.opam/4.14.0/bin/ocamldep.opt -modules' mmlparser.mly > mmlparser.mly.depends
File "mmlparser.mly", line 54, characters 0-7:
Error: syntax error after ';' and before '%inline'.
Ill-formed production.
A production is a sequence of producers, followed with a semantic action.
Examples of well-formed producers:
  expr
  option(COMMA)
  separated_list(COMMA, expr)
  e = expr
  ds = declaration*
  es = list(terminated(expr, SEMI))
  es = list(e = expr SEMI { e })
  xs = list(x = var { Some x } | WILDCARD { None })
  expr [@cost 0]
Command exited with code 1.
# Compilation unsuccessful.
